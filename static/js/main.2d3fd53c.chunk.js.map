{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/ContryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/ContryPicker/CountryPicker.module.css","image.png"],"names":["module","exports","Cards","prop","data","country","confirmed","className","Grid","container","spacing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","separator","end","Date","lastUpdate","toDateString","recovered","deaths","url","fetchData","a","changableUrl","axios","get","response","modifiedData","value","console","log","countries","countriesArray","map","name","Chart","useEffect","labels","datasets","label","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","setData","setCountry","countryInput","dataFetched","src","coronaImage","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d3fd53c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__120rM\",\"card\":\"Cards_card__QAj7e\",\"infected\":\"Cards_infected__HxflN\",\"recovered\":\"Cards_recovered__3v5in\",\"deaths\":\"Cards_deaths__2ryP6\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nfunction Cards({ prop }) {\r\n  var country = prop.country;\r\n  var data = prop.data;\r\n\r\n  if (!data.confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className=\"styles.container\">\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp separator=\",\" end={data.confirmed} />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(data.lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of confirmed cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp separator=\",\" end={data.recovered} />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(data.lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Dead\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp separator=\",\" end={data.deaths} />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(data.lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changableUrl = url;\r\n\r\n  if (country == \"world\") {\r\n    changableUrl = url;\r\n  } else if (country) {\r\n    changableUrl = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const response = await axios.get(changableUrl);\r\n\r\n    const modifiedData = {\r\n      confirmed: response.data.confirmed.value,\r\n      deaths: response.data.deaths.value,\r\n      recovered: response.data.recovered.value,\r\n      lastUpdate: response.data.lastUpdate,\r\n    };\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const countries = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      \"https://covid19.mathdro.id/api/countries\"\r\n    );\r\n    const countriesArray = response.data.countries.map((item) => {\r\n      return item.name;\r\n    });\r\n    return countriesArray;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport { StylesProvider } from \"@material-ui/core\";\r\nimport styles from \"./Chart.module.css\";\r\nfunction Chart({ data, country }) {\r\n  useEffect(async () => {\r\n    //const data = await fetchDailyData();\r\n  }, []);\r\n\r\n  console.log(data);\r\n  console.log(data.confirmed);\r\n  console.log(country);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Bar\r\n        data={{\r\n          labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n          datasets: [\r\n            {\r\n              label: \"People\",\r\n              backgroundColor: [\r\n                \"rgba(0, 0, 255, 0.5)\",\r\n                \"rgba(0, 255, 0, 0.5)\",\r\n                \"rgba(255, 0, 0, 0.5)\",\r\n              ],\r\n              data: [data.confirmed, data.recovered, data.deaths],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { countries } from \"../../api/index\";\r\nimport { fetchData } from \"../../api/index\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nfunction CountryPicker({ handleCountryChange }) {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n  useEffect(async () => {\r\n    var data = await countries();\r\n    console.log(data);\r\n    setFetchedCountries(await data);\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => {\r\n          handleCountryChange(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"world\">World</option>\r\n        {fetchedCountries.map((item, i) => {\r\n          return (\r\n            <option key={i} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import Cards from \"./components/Cards/Cards\";\r\n// import Chart from \"./components/Chart/Chart\";\r\n// import ContryPicker from \"./components/ContryPicker/CountryPicker\";\r\nimport styles from \"./App.module.css\";\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport { fetchData } from \"./api/index\";\r\n\r\nimport coronaImage from \"./image.png\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({});\r\n  const [country, setCountry] = useState(\"World\");\r\n  const handleCountryChange = async (countryInput) => {\r\n    const dataFetched = await fetchData(countryInput);\r\n    await setData(dataFetched);\r\n    await setCountry(countryInput);\r\n  };\r\n  useEffect(async () => {\r\n    const dataFetched = await fetchData();\r\n    setData(dataFetched);\r\n    console.log(data);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <img src={coronaImage} alt=\"COVID-19\" />\r\n        <Cards prop={{ data, country }} />\r\n        <CountryPicker handleCountryChange={handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2DE5W\",\"image\":\"App_image__AWzFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1P7FA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3iIE2\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}